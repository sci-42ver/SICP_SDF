(cd "~/SICP_SDF/exercise_codes/SICP/3")
(load "book-stream-lib.scm")
(load "../lib.scm")

(define (test)
  (define sum 0)
  (displayln sum)
  (define (accum x)
    (set! sum (+ x sum))
    sum)
  (displayln sum)
  (define seq (stream-map accum (stream-enumerate-interval 1 20)))
  (displayln sum)
  (define y (stream-filter even? seq))
  (displayln sum)
  (define z (stream-filter (lambda (x) (= (remainder x 5) 0))
                           seq))
  (displayln sum)
  (displayln (stream-ref y 7))
  (display-stream z))

(test)

(load "book-stream-lib-reimplement-mit-scheme.scm")
(load "book-stream-lib.scm")
(test)
